/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BasicResponse,
  HTTPValidationError,
  TelegramInputData,
  Token,
} from '../models/index';
import {
    BasicResponseFromJSON,
    BasicResponseToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    TelegramInputDataFromJSON,
    TelegramInputDataToJSON,
    TokenFromJSON,
    TokenToJSON,
} from '../models/index';

export interface AuthenticateApiAuthTokenPostRequest {
    telegramInputData: TelegramInputData;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     * Authenticate
     */
    async authenticateApiAuthTokenPostRaw(requestParameters: AuthenticateApiAuthTokenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {
        if (requestParameters['telegramInputData'] == null) {
            throw new runtime.RequiredError(
                'telegramInputData',
                'Required parameter "telegramInputData" was null or undefined when calling authenticateApiAuthTokenPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/token`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TelegramInputDataToJSON(requestParameters['telegramInputData']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));
    }

    /**
     * Authenticate
     */
    async authenticateApiAuthTokenPost(requestParameters: AuthenticateApiAuthTokenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {
        const response = await this.authenticateApiAuthTokenPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Ping
     */
    async pingApiAuthPingGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/ping`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Ping
     */
    async pingApiAuthPingGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.pingApiAuthPingGetRaw(initOverrides);
        return await response.value();
    }

}
