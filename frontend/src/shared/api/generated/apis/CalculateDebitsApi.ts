/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Debt,
  HTTPValidationError,
} from '../models/index';
import {
    DebtFromJSON,
    DebtToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface CalculateEventDebtsApiCalculateDebitsEventsEventIdPostRequest {
    eventId: string;
}

/**
 * 
 */
export class CalculateDebitsApi extends runtime.BaseAPI {

    /**
     * Get debts smeta
     * Calculate Event Debts
     */
    async calculateEventDebtsApiCalculateDebitsEventsEventIdPostRaw(requestParameters: CalculateEventDebtsApiCalculateDebitsEventsEventIdPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Debt>>> {
        if (requestParameters['eventId'] == null) {
            throw new runtime.RequiredError(
                'eventId',
                'Required parameter "eventId" was null or undefined when calling calculateEventDebtsApiCalculateDebitsEventsEventIdPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2PasswordBearer", []);
        }

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/calculate_debits/events/{event_id}`.replace(`{${"event_id"}}`, encodeURIComponent(String(requestParameters['eventId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DebtFromJSON));
    }

    /**
     * Get debts smeta
     * Calculate Event Debts
     */
    async calculateEventDebtsApiCalculateDebitsEventsEventIdPost(requestParameters: CalculateEventDebtsApiCalculateDebitsEventsEventIdPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Debt>> {
        const response = await this.calculateEventDebtsApiCalculateDebitsEventsEventIdPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
