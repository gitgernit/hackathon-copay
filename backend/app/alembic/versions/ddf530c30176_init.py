"""init

Revision ID: ddf530c30176
Revises: 
Create Date: 2024-11-09 16:39:11.390114

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ddf530c30176'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    ...
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('event',
    # sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.Column('id', sa.Uuid(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('invite',
    # sa.Column('usages', sa.Integer(), nullable=False),
    # sa.Column('expiration_date', sa.DateTime(), nullable=False),
    # sa.Column('id', sa.Uuid(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('item',
    # sa.Column('id', sa.Uuid(), nullable=False),
    # sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.Column('price', sa.Float(), nullable=False),
    # sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('transaction',
    # sa.Column('id', sa.Uuid(), nullable=False),
    # sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.Column('closed', sa.Boolean(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('user',
    # sa.Column('id', sa.BigInteger(), nullable=False),
    # sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('transaction')
    op.drop_table('item')
    op.drop_table('invite')
    op.drop_table('event')
    # ### end Alembic commands ###
